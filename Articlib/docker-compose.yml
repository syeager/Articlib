version: "3.8"

networks:
  app:
  logs:

services:
  api_articles:
    container_name: articlib-articles
    image: articlib-articles:local
    #build:
    #  context: .
    #  dockerfile: Articles/Source/Articlib.Articles.Api/Dockerfile
    volumes:
      - /var/log:/var/log
    networks:
      - app
    depends_on:
      - database

  database:
    container_name: articlib-mysql
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_DATABASE: Articlib
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: dev
      MYSQL_PASSWORD: pass
    ports:
      - 33060:3306
    networks:
      - app

  loki:
    container_name: articlib-loki
    image: grafana/loki:2.3.0
    ports:
      - "3100:3100"
    command:
      - --config.file=/etc/loki/local-config.yaml
    networks:
      - logs

  promtail:
    container_name: articlib-promtail
    image: grafana/promtail:2.3.0
    volumes:
      - /var/log/promtail:/var/log
    command:
      - --config.file=/etc/promtail/config.yml
    networks:
      - logs
    depends_on:
      - loki

  grafana:
    container_name: articlib-grafana
    image: articlib-grafana:local
    build:
      context: Services/Grafana
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - logs
    depends_on:
      - loki
      - prometheus

  prometheus:
    container_name: articlib-prometheus
    image: articlib-prometheus:local
    build:
      context: Services/Prometheus
      dockerfile: Dockerfile
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app
